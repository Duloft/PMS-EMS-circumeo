# Generated by Django 4.2 on 2024-12-23 22:38

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required.', max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('client_admin', 'Admin'), ('tenant', 'Tenant')], default='tenant', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientAccountProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(blank=True, choices=[('Estate Management Company', 'Estate Management Company'), ('Property Management Company', 'Property Management Company'), ('LandLord', 'LandLord'), ('Property Manager', 'Property Manager')], default='Estate Management Company', max_length=150, verbose_name='Account Type')),
                ('account_name', models.CharField(blank=True, max_length=150, verbose_name='Account Name')),
                ('domain_name', models.CharField(blank=True, help_text='realpro => realpro.duloft.com', max_length=150, null=True, verbose_name='Domain Name')),
                ('company_logo', models.FileField(blank=True, null=True, upload_to='documents/company_logo/')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Head Office Address')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('branch_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Branch Office Address')),
                ('shared_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Delete')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recommended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_referrals', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('no_users', models.CharField(max_length=10)),
                ('amount', models.CharField(blank=True, max_length=25, null=True)),
                ('no_properties', models.CharField(blank=True, max_length=10, null=True)),
                ('duration_in_days', models.IntegerField(default=30)),
                ('no_units', models.CharField(blank=True, max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=40, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2024, 12, 26, 22, 38, 53, 963421, tzinfo=datetime.timezone.utc))),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('id_type', models.CharField(choices=[('nin', 'NIN'), ('vnin', 'vNIN'), ("voter's card", "Voter's Card"), ("driver's license", "Driver's License"), ('international passport', 'International Passport')], default='nin', max_length=50)),
                ('valid_id_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valid ID Number')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='documents/profilePhotos/')),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married')], max_length=50, verbose_name='Marital Status')),
                ('job', models.CharField(blank=True, max_length=50, null=True, verbose_name='Job Title')),
                ('monthly_income', models.CharField(blank=True, max_length=50, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Company Name/Employer Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recommended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_referrals', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('durations_plan', models.CharField(choices=[('1', '1 Month'), ('6', '6 Months'), ('12', '12 Months'), ('24', '24 Months')], max_length=10, verbose_name='Durations Of Plan')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(null=True)),
                ('verified', models.BooleanField(default=False)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientaccountprofile')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.subscriptionplan')),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
    ]
